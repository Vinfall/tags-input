{
  "version": 3,
  "sources": ["../node_modules/escape-string-regexp/index.js", "../src/tags-input.js", "../demo/index.js"],
  "sourcesContent": ["'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n", "const escapeStringRegexp = require('escape-string-regexp');\n\nmodule.exports = tagsInput;\n\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst ENTER = 13;\nconst ESC = 27;\nconst LEFT = 37;\nconst RIGHT = 39;\nconst DELETE = 46;\n\nconst COPY_PROPS = ['autocomplete', 'disabled', 'readonly', 'type', 'list'];\nconst MOVE_PROPS = ['accept', 'accesskey', 'autocapitalize', 'autofocus', 'dir', 'inputmode', 'lang', 'max',\n\t'maxlength', 'min', 'minlength', 'pattern', 'placeholder', 'size', 'spellcheck', 'step', 'tabindex', 'title'];\n\nfunction checkerForSeparator(separator) {\n\tfunction simple(separator) {\n\t\treturn {\n\t\t\tsplit: s => s.split(separator),\n\t\t\tjoin: arr => arr.join(separator),\n\t\t\ttest: char => char === separator\n\t\t};\n\t}\n\n\tfunction multi(separators) {\n\t\tlet regex = separators\n\t\t\t.split('')\n\t\t\t.map(escapeStringRegexp)\n\t\t\t.join('|');\n\n\t\tregex = new RegExp(regex);\n\n\t\treturn {\n\t\t\tsplit: s => s.split(regex),\n\t\t\tjoin: arr => arr.join(separators[0]),\n\t\t\ttest: char => regex.test(char)\n\t\t};\n\t}\n\n\treturn separator.length > 1 ? multi(separator) : simple(separator);\n}\n\nfunction createElement(type, name, text, attributes) {\n\tlet el = document.createElement(type);\n\tif (name) el.className = name;\n\tif (text) el.textContent = text;\n\tfor (let key in attributes) {\n\t\tel.setAttribute(`data-${key}`, attributes[key]);\n\t}\n\treturn el;\n}\n\nfunction insertAfter({ nextSibling, parentNode }, el) {\n\treturn nextSibling ?\n\t\tparentNode.insertBefore(el, nextSibling) :\n\t\tparentNode.appendChild(el);\n}\n\nfunction caretAtStart({ selectionStart, selectionEnd, value }) {\n\ttry {\n\t\treturn selectionStart === 0 && selectionEnd === 0;\n\t}\n\tcatch {\n\t\treturn value === '';\n\t}\n}\n\nfunction tagsInput(input) {\n\n\tconst base = createElement('div', 'tags-input');\n\tconst checker = checkerForSeparator(input.getAttribute('data-separator') || ',');\n\tconst allowDuplicates = checkAllowDuplicates();\n\n\tinsertAfter(input, base);\n\tinput.classList.add('visuallyhidden');\n\n\tlet inputType = input.getAttribute('type');\n\tif (!inputType || inputType === 'tags') {\n\t\tinput.setAttribute('type', 'text');\n\t}\n\tbase.input = createElement('input');\n\tCOPY_PROPS.forEach(prop => {\n\t\tif (input.hasAttribute(prop)) {\n\t\t\tbase.input.setAttribute(prop, input.getAttribute(prop));\n\t\t}\n\t});\n\tMOVE_PROPS.forEach(prop => {\n\t\tif (input.hasAttribute(prop)) {\n\t\t\tbase.input.setAttribute(prop, input.getAttribute(prop));\n\t\t\tinput.removeAttribute(prop);\n\t\t}\n\t});\n\tbase.appendChild(base.input);\n\n\tconst datalistShadow = makeDatalistShadow();\n\n\tinput.setAttribute('type', 'text');\n\tinput.tabIndex = -1;\n\n\tinput.addEventListener('focus', () => {\n\t\tbase.input.focus();\n\t});\n\n\tbase.input.addEventListener('focus', () => {\n\t\tbase.classList.add('focus');\n\t\tselect();\n\t});\n\n\tbase.input.addEventListener('blur', () => {\n\t\tbase.classList.remove('focus');\n\t\tselect();\n\t\tsavePartialInput();\n\t\tdispatchEvent('complete');\n\t});\n\n\tbase.input.addEventListener('keydown', e => {\n\t\tlet el = base.input;\n\t\tlet key = e.keyCode || e.which;\n\t\tlet separator = checker.test(e.key);\n\t\tlet selectedTag = $('.tag.selected');\n\t\tlet lastTag = $('.tag:last-of-type');\n\n\t\tif (key === ESC) {\n\t\t\tbase.input.value = '';\n\t\t\tbase.input.blur();\n\t\t\treturn;\n\t\t}\n\t\telse if (key === ENTER || key === TAB || separator) {\n\t\t\tif (!el.value && !separator) {\n\t\t\t\tif (key === ENTER) base.input.blur();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsavePartialInput();\n\t\t}\n\t\telse if (key === DELETE && selectedTag) {\n\t\t\tif (selectedTag !== lastTag) select(selectedTag.nextSibling);\n\t\t\tbase.removeChild(selectedTag);\n\t\t\tsave();\n\t\t}\n\t\telse if (key === BACKSPACE) {\n\t\t\tif (selectedTag) {\n\t\t\t\tselect(selectedTag.previousSibling);\n\t\t\t\tbase.removeChild(selectedTag);\n\t\t\t\tsave();\n\t\t\t}\n\t\t\telse if (lastTag && caretAtStart(el)) {\n\t\t\t\tselect(lastTag);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse if (key === LEFT) {\n\t\t\tif (selectedTag) {\n\t\t\t\tif (selectedTag.previousSibling) {\n\t\t\t\t\tselect(selectedTag.previousSibling);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!caretAtStart(el)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tselect(lastTag);\n\t\t\t}\n\t\t}\n\t\telse if (key === RIGHT) {\n\t\t\tif (!selectedTag) return;\n\t\t\tselect(selectedTag.nextSibling);\n\t\t}\n\t\telse {\n\t\t\treturn select();\n\t\t}\n\n\t\te.preventDefault();\n\t\treturn false;\n\t});\n\n\t// Proxy \"input\" (live change) events , update the first tag live as the user types\n\t// This means that users who only want one thing don't have to enter commas\n\tbase.input.addEventListener('input', () => {\n\t\tinput.value = getValue();\n\t\tinput.dispatchEvent(new Event('input'));\n\t});\n\n\t// handle selection from datalist\n\tbase.input.addEventListener('change', () => setTimeout(savePartialInput, 0));\n\n\t// One tick after pasting, parse pasted text as CSV:\n\tbase.input.addEventListener('paste', () => setTimeout(savePartialInput, 0));\n\n\tif (window.PointerEvent) {\n\t\tbase.addEventListener('pointerdown', refocus);\n\t} else {\n\t\tbase.addEventListener('mousedown', refocus);\n\t\tbase.addEventListener('touchstart', refocus);\n\t}\n\n\tbase.setValue = setValue;\n\tbase.getValue = getValue;\n\n\t// Add tags for existing values\n\tsavePartialInput(input.value, true);\n\tdatalistShadow?.update(getValues());\n\n\tlet self = { setValue, getValue };\n\tObject.defineProperty(self, 'disabled', {\n\t\tget: () => base.input.disabled,\n\t\tset(v) {\n\t\t\tif (v) {\n\t\t\t\tbase.setAttribute('disabled', '');\n\t\t\t} else {\n\t\t\t\tbase.removeAttribute('disabled');\n\t\t\t}\n\t\t\tbase.input.disabled = v;\n\t\t}\n\t});\n\treturn self;\n\n\tfunction $(selector) {\n\t\treturn base.querySelector(selector);\n\t}\n\n\tfunction $$(selector) {\n\t\treturn base.querySelectorAll(selector);\n\t}\n\n\tfunction getValue(vv = getValues()) {\n\t\treturn checker.join(vv);\n\t}\n\n\tfunction getValues() {\n\t\tlet values = [];\n\t\t$$('.tag').forEach(({ textContent }) => values.push(textContent));\n\t\tif (base.input.value) values.unshift(base.input.value);\n\t\treturn values;\n\t}\n\n\tfunction setValue(value) {\n\t\t$$('.tag').forEach(t => base.removeChild(t));\n\t\tsavePartialInput(value, true);\n\t}\n\n\tfunction save(init) {\n\t\tconst values = getValues();\n\t\tinput.value = getValue(values);\n\t\tdatalistShadow?.update(values);\n\t\tif (init) {\n\t\t\treturn;\n\t\t}\n\t\tinput.dispatchEvent(new Event('change'));\n\t}\n\n\tfunction checkAllowDuplicates() {\n\t\tconst allow =\n\t\t\tinput.getAttribute('data-allow-duplicates') ||\n\t\t\tinput.getAttribute('duplicates');\n\t\treturn allow === 'on' || allow === '1' || allow === 'true';\n\t}\n\n\t// Return false if no need to add a tag\n\tfunction addTag(text) {\n\t\tlet added = false;\n\t\tfunction addOneTag(text) {\n\t\t\tlet tag = text && text.trim();\n\t\t\t// Ignore if text is empty\n\t\t\tif (!tag) return;\n\n\t\t\t// Check input validity (eg, for pattern=)\n\t\t\t// At tags-input init fill the base.input\n\t\t\tbase.input.value = text;\n\t\t\tif (!base.input.checkValidity()) {\n\t\t\t\tbase.classList.add('error');\n\t\t\t\tsetTimeout(() => base.classList.remove('error'), 150);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For duplicates, briefly highlight the existing tag\n\t\t\tif (!allowDuplicates) {\n\t\t\t\tlet exisingTag = $(`[data-tag=\"${tag}\"]`);\n\t\t\t\tif (exisingTag) {\n\t\t\t\t\texisingTag.classList.add('dupe');\n\t\t\t\t\tsetTimeout(() => exisingTag.classList.remove('dupe'), 100);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase.insertBefore(\n\t\t\t\tcreateElement('span', 'tag', tag, { tag }),\n\t\t\t\tbase.input\n\t\t\t);\n\t\t\tadded = true;\n\t\t}\n\n\t\t// Add multiple tags if the user pastes in data with SEPERATOR already in it\n\t\tchecker.split(text).forEach(addOneTag);\n\t\treturn added;\n\t}\n\n\tfunction select(el) {\n\t\tlet sel = $('.selected');\n\t\tif (sel) sel.classList.remove('selected');\n\t\tif (el) el.classList.add('selected');\n\t}\n\n\tfunction savePartialInput(value, init) {\n\t\tif (typeof value !== 'string' && !Array.isArray(value)) {\n\t\t\t// If the base input does not contain a value, default to the original element passed\n\t\t\tvalue = base.input.value;\n\t\t}\n\t\tif (addTag(value) !== false) {\n\t\t\tbase.input.value = '';\n\t\t\tsave(init);\n\t\t}\n\t}\n\n\tfunction refocus(e) {\n\t\tbase.input.focus();\n\t\tif (e.target.classList.contains('tag')) select(e.target);\n\t\tif (e.target === base.input) return select();\n\t\te.preventDefault();\n\t\treturn false;\n\t}\n\n\tfunction dispatchEvent(name) {\n\t\tconst ce = new CustomEvent(`tags-input-${name}`, { bubbles: true });\n\t\tinput.dispatchEvent(ce);\n\t}\n\n\tfunction makeDatalistShadow() {\n\t\t// no need to maintain a shadow list if there's no original list or duplicates are allowed\n\t\tif (!input.list || allowDuplicates) return;\n\n\t\tconst origList = document.getElementById(input.getAttribute('list'));\n\t\tconst datalist = origList.cloneNode();\n\t\tdatalist.id = `${origList.id}-tags-input`;\n\t\tbase.input.setAttribute('list', datalist.id);\n\t\tinsertAfter(origList, datalist);\n\n\t\treturn {\n\t\t\tupdate\n\t\t};\n\n\t\tfunction update(values) {\n\t\t\tdatalist.innerHTML = '';\n\t\t\tArray.from(origList.childNodes)\n\t\t\t\t.filter(option => !values.includes(option.value))\n\t\t\t\t.forEach(option => datalist.appendChild(option.cloneNode(true)));\n\t\t}\n\t}\n}\n\n// make life easier:\ntagsInput.enhance = tagsInput.tagsInput = tagsInput;\n", "const tagsInput = require('../src/tags-input');\n\nconst tis = [];\nfor (const input of document.querySelectorAll('form input')) {\n\tconst ti = tagsInput(input);\n\tinput.addEventListener('change', onchange);\n\ttis.push(ti);\n}\n\ndocument\n\t.querySelector('input[type=\"checkbox\"]')\n\t.addEventListener('change', ev => {\n\t\tconst enabled = ev.target.checked;\n\t\ttis.forEach(ti => ti.disabled = !enabled);\n\t});\ndocument\n\t.querySelector('.forms')\n\t.addEventListener('tags-input-complete', oncomplete);\n\nfunction onchange({ target }) {\n\tconst span = target.parentElement.querySelector('.value');\n\tspan.textContent = target.value;\n}\n\nfunction oncomplete(ev) {\n\tconsole.log('complete', ev.details, ev.target.value);\n}\n"],
  "mappings": ";;;;;;;AAAA;AAAA;AAAA;AAEA,UAAI,mBAAmB;AAEvB,aAAO,UAAU,SAAU,KAAK;AAC/B,YAAI,OAAO,QAAQ,UAAU;AAC5B,gBAAM,IAAI,UAAU,mBAAmB;AAAA,QACxC;AAEA,eAAO,IAAI,QAAQ,kBAAkB,MAAM;AAAA,MAC5C;AAAA;AAAA;;;ACVA;AAAA;AAAA,UAAM,qBAAqB;AAE3B,aAAO,UAAUA;AAEjB,UAAM,YAAY;AAClB,UAAM,MAAM;AACZ,UAAM,QAAQ;AACd,UAAM,MAAM;AACZ,UAAM,OAAO;AACb,UAAM,QAAQ;AACd,UAAM,SAAS;AAEf,UAAM,aAAa,CAAC,gBAAgB,YAAY,YAAY,QAAQ,MAAM;AAC1E,UAAM,aAAa;AAAA,QAAC;AAAA,QAAU;AAAA,QAAa;AAAA,QAAkB;AAAA,QAAa;AAAA,QAAO;AAAA,QAAa;AAAA,QAAQ;AAAA,QACrG;AAAA,QAAa;AAAA,QAAO;AAAA,QAAa;AAAA,QAAW;AAAA,QAAe;AAAA,QAAQ;AAAA,QAAc;AAAA,QAAQ;AAAA,QAAY;AAAA,MAAO;AAE7G,eAAS,oBAAoB,WAAW;AACvC,iBAAS,OAAOC,YAAW;AAC1B,iBAAO;AAAA,YACN,OAAO,OAAK,EAAE,MAAMA,UAAS;AAAA,YAC7B,MAAM,SAAO,IAAI,KAAKA,UAAS;AAAA,YAC/B,MAAM,UAAQ,SAASA;AAAA,UACxB;AAAA,QACD;AAEA,iBAAS,MAAM,YAAY;AAC1B,cAAI,QAAQ,WACV,MAAM,EAAE,EACR,IAAI,kBAAkB,EACtB,KAAK,GAAG;AAEV,kBAAQ,IAAI,OAAO,KAAK;AAExB,iBAAO;AAAA,YACN,OAAO,OAAK,EAAE,MAAM,KAAK;AAAA,YACzB,MAAM,SAAO,IAAI,KAAK,WAAW,CAAC,CAAC;AAAA,YACnC,MAAM,UAAQ,MAAM,KAAK,IAAI;AAAA,UAC9B;AAAA,QACD;AAEA,eAAO,UAAU,SAAS,IAAI,MAAM,SAAS,IAAI,OAAO,SAAS;AAAA,MAClE;AAEA,eAAS,cAAc,MAAM,MAAM,MAAM,YAAY;AACpD,YAAI,KAAK,SAAS,cAAc,IAAI;AACpC,YAAI;AAAM,aAAG,YAAY;AACzB,YAAI;AAAM,aAAG,cAAc;AAC3B,iBAAS,OAAO,YAAY;AAC3B,aAAG,aAAa,QAAQ,GAAG,IAAI,WAAW,GAAG,CAAC;AAAA,QAC/C;AACA,eAAO;AAAA,MACR;AAEA,eAAS,YAAY,EAAE,aAAa,WAAW,GAAG,IAAI;AACrD,eAAO,cACN,WAAW,aAAa,IAAI,WAAW,IACvC,WAAW,YAAY,EAAE;AAAA,MAC3B;AAEA,eAAS,aAAa,EAAE,gBAAgB,cAAc,MAAM,GAAG;AAC9D,YAAI;AACH,iBAAO,mBAAmB,KAAK,iBAAiB;AAAA,QACjD,QACM;AACL,iBAAO,UAAU;AAAA,QAClB;AAAA,MACD;AAEA,eAASD,WAAU,OAAO;AAEzB,cAAM,OAAO,cAAc,OAAO,YAAY;AAC9C,cAAM,UAAU,oBAAoB,MAAM,aAAa,gBAAgB,KAAK,GAAG;AAC/E,cAAM,kBAAkB,qBAAqB;AAE7C,oBAAY,OAAO,IAAI;AACvB,cAAM,UAAU,IAAI,gBAAgB;AAEpC,YAAI,YAAY,MAAM,aAAa,MAAM;AACzC,YAAI,CAAC,aAAa,cAAc,QAAQ;AACvC,gBAAM,aAAa,QAAQ,MAAM;AAAA,QAClC;AACA,aAAK,QAAQ,cAAc,OAAO;AAClC,mBAAW,QAAQ,UAAQ;AAC1B,cAAI,MAAM,aAAa,IAAI,GAAG;AAC7B,iBAAK,MAAM,aAAa,MAAM,MAAM,aAAa,IAAI,CAAC;AAAA,UACvD;AAAA,QACD,CAAC;AACD,mBAAW,QAAQ,UAAQ;AAC1B,cAAI,MAAM,aAAa,IAAI,GAAG;AAC7B,iBAAK,MAAM,aAAa,MAAM,MAAM,aAAa,IAAI,CAAC;AACtD,kBAAM,gBAAgB,IAAI;AAAA,UAC3B;AAAA,QACD,CAAC;AACD,aAAK,YAAY,KAAK,KAAK;AAE3B,cAAM,iBAAiB,mBAAmB;AAE1C,cAAM,aAAa,QAAQ,MAAM;AACjC,cAAM,WAAW;AAEjB,cAAM,iBAAiB,SAAS,MAAM;AACrC,eAAK,MAAM,MAAM;AAAA,QAClB,CAAC;AAED,aAAK,MAAM,iBAAiB,SAAS,MAAM;AAC1C,eAAK,UAAU,IAAI,OAAO;AAC1B,iBAAO;AAAA,QACR,CAAC;AAED,aAAK,MAAM,iBAAiB,QAAQ,MAAM;AACzC,eAAK,UAAU,OAAO,OAAO;AAC7B,iBAAO;AACP,2BAAiB;AACjB,wBAAc,UAAU;AAAA,QACzB,CAAC;AAED,aAAK,MAAM,iBAAiB,WAAW,OAAK;AAC3C,cAAI,KAAK,KAAK;AACd,cAAI,MAAM,EAAE,WAAW,EAAE;AACzB,cAAI,YAAY,QAAQ,KAAK,EAAE,GAAG;AAClC,cAAI,cAAc,EAAE,eAAe;AACnC,cAAI,UAAU,EAAE,mBAAmB;AAEnC,cAAI,QAAQ,KAAK;AAChB,iBAAK,MAAM,QAAQ;AACnB,iBAAK,MAAM,KAAK;AAChB;AAAA,UACD,WACS,QAAQ,SAAS,QAAQ,OAAO,WAAW;AACnD,gBAAI,CAAC,GAAG,SAAS,CAAC,WAAW;AAC5B,kBAAI,QAAQ;AAAO,qBAAK,MAAM,KAAK;AACnC;AAAA,YACD;AACA,6BAAiB;AAAA,UAClB,WACS,QAAQ,UAAU,aAAa;AACvC,gBAAI,gBAAgB;AAAS,qBAAO,YAAY,WAAW;AAC3D,iBAAK,YAAY,WAAW;AAC5B,iBAAK;AAAA,UACN,WACS,QAAQ,WAAW;AAC3B,gBAAI,aAAa;AAChB,qBAAO,YAAY,eAAe;AAClC,mBAAK,YAAY,WAAW;AAC5B,mBAAK;AAAA,YACN,WACS,WAAW,aAAa,EAAE,GAAG;AACrC,qBAAO,OAAO;AAAA,YACf,OACK;AACJ;AAAA,YACD;AAAA,UACD,WACS,QAAQ,MAAM;AACtB,gBAAI,aAAa;AAChB,kBAAI,YAAY,iBAAiB;AAChC,uBAAO,YAAY,eAAe;AAAA,cACnC;AAAA,YACD,WACS,CAAC,aAAa,EAAE,GAAG;AAC3B;AAAA,YACD,OACK;AACJ,qBAAO,OAAO;AAAA,YACf;AAAA,UACD,WACS,QAAQ,OAAO;AACvB,gBAAI,CAAC;AAAa;AAClB,mBAAO,YAAY,WAAW;AAAA,UAC/B,OACK;AACJ,mBAAO,OAAO;AAAA,UACf;AAEA,YAAE,eAAe;AACjB,iBAAO;AAAA,QACR,CAAC;AAID,aAAK,MAAM,iBAAiB,SAAS,MAAM;AAC1C,gBAAM,QAAQ,SAAS;AACvB,gBAAM,cAAc,IAAI,MAAM,OAAO,CAAC;AAAA,QACvC,CAAC;AAGD,aAAK,MAAM,iBAAiB,UAAU,MAAM,WAAW,kBAAkB,CAAC,CAAC;AAG3E,aAAK,MAAM,iBAAiB,SAAS,MAAM,WAAW,kBAAkB,CAAC,CAAC;AAE1E,YAAI,OAAO,cAAc;AACxB,eAAK,iBAAiB,eAAe,OAAO;AAAA,QAC7C,OAAO;AACN,eAAK,iBAAiB,aAAa,OAAO;AAC1C,eAAK,iBAAiB,cAAc,OAAO;AAAA,QAC5C;AAEA,aAAK,WAAW;AAChB,aAAK,WAAW;AAGhB,yBAAiB,MAAM,OAAO,IAAI;AAClC,wBAAgB,OAAO,UAAU,CAAC;AAElC,YAAI,OAAO,EAAE,UAAU,SAAS;AAChC,eAAO,eAAe,MAAM,YAAY;AAAA,UACvC,KAAK,MAAM,KAAK,MAAM;AAAA,UACtB,IAAI,GAAG;AACN,gBAAI,GAAG;AACN,mBAAK,aAAa,YAAY,EAAE;AAAA,YACjC,OAAO;AACN,mBAAK,gBAAgB,UAAU;AAAA,YAChC;AACA,iBAAK,MAAM,WAAW;AAAA,UACvB;AAAA,QACD,CAAC;AACD,eAAO;AAEP,iBAAS,EAAE,UAAU;AACpB,iBAAO,KAAK,cAAc,QAAQ;AAAA,QACnC;AAEA,iBAAS,GAAG,UAAU;AACrB,iBAAO,KAAK,iBAAiB,QAAQ;AAAA,QACtC;AAEA,iBAAS,SAAS,KAAK,UAAU,GAAG;AACnC,iBAAO,QAAQ,KAAK,EAAE;AAAA,QACvB;AAEA,iBAAS,YAAY;AACpB,cAAI,SAAS,CAAC;AACd,aAAG,MAAM,EAAE,QAAQ,CAAC,EAAE,YAAY,MAAM,OAAO,KAAK,WAAW,CAAC;AAChE,cAAI,KAAK,MAAM;AAAO,mBAAO,QAAQ,KAAK,MAAM,KAAK;AACrD,iBAAO;AAAA,QACR;AAEA,iBAAS,SAAS,OAAO;AACxB,aAAG,MAAM,EAAE,QAAQ,OAAK,KAAK,YAAY,CAAC,CAAC;AAC3C,2BAAiB,OAAO,IAAI;AAAA,QAC7B;AAEA,iBAAS,KAAK,MAAM;AACnB,gBAAM,SAAS,UAAU;AACzB,gBAAM,QAAQ,SAAS,MAAM;AAC7B,0BAAgB,OAAO,MAAM;AAC7B,cAAI,MAAM;AACT;AAAA,UACD;AACA,gBAAM,cAAc,IAAI,MAAM,QAAQ,CAAC;AAAA,QACxC;AAEA,iBAAS,uBAAuB;AAC/B,gBAAM,QACL,MAAM,aAAa,uBAAuB,KAC1C,MAAM,aAAa,YAAY;AAChC,iBAAO,UAAU,QAAQ,UAAU,OAAO,UAAU;AAAA,QACrD;AAGA,iBAAS,OAAO,MAAM;AACrB,cAAI,QAAQ;AACZ,mBAAS,UAAUE,OAAM;AACxB,gBAAI,MAAMA,SAAQA,MAAK,KAAK;AAE5B,gBAAI,CAAC;AAAK;AAIV,iBAAK,MAAM,QAAQA;AACnB,gBAAI,CAAC,KAAK,MAAM,cAAc,GAAG;AAChC,mBAAK,UAAU,IAAI,OAAO;AAC1B,yBAAW,MAAM,KAAK,UAAU,OAAO,OAAO,GAAG,GAAG;AACpD;AAAA,YACD;AAGA,gBAAI,CAAC,iBAAiB;AACrB,kBAAI,aAAa,EAAE,cAAc,GAAG,IAAI;AACxC,kBAAI,YAAY;AACf,2BAAW,UAAU,IAAI,MAAM;AAC/B,2BAAW,MAAM,WAAW,UAAU,OAAO,MAAM,GAAG,GAAG;AACzD;AAAA,cACD;AAAA,YACD;AAEA,iBAAK;AAAA,cACJ,cAAc,QAAQ,OAAO,KAAK,EAAE,IAAI,CAAC;AAAA,cACzC,KAAK;AAAA,YACN;AACA,oBAAQ;AAAA,UACT;AAGA,kBAAQ,MAAM,IAAI,EAAE,QAAQ,SAAS;AACrC,iBAAO;AAAA,QACR;AAEA,iBAAS,OAAO,IAAI;AACnB,cAAI,MAAM,EAAE,WAAW;AACvB,cAAI;AAAK,gBAAI,UAAU,OAAO,UAAU;AACxC,cAAI;AAAI,eAAG,UAAU,IAAI,UAAU;AAAA,QACpC;AAEA,iBAAS,iBAAiB,OAAO,MAAM;AACtC,cAAI,OAAO,UAAU,YAAY,CAAC,MAAM,QAAQ,KAAK,GAAG;AAEvD,oBAAQ,KAAK,MAAM;AAAA,UACpB;AACA,cAAI,OAAO,KAAK,MAAM,OAAO;AAC5B,iBAAK,MAAM,QAAQ;AACnB,iBAAK,IAAI;AAAA,UACV;AAAA,QACD;AAEA,iBAAS,QAAQ,GAAG;AACnB,eAAK,MAAM,MAAM;AACjB,cAAI,EAAE,OAAO,UAAU,SAAS,KAAK;AAAG,mBAAO,EAAE,MAAM;AACvD,cAAI,EAAE,WAAW,KAAK;AAAO,mBAAO,OAAO;AAC3C,YAAE,eAAe;AACjB,iBAAO;AAAA,QACR;AAEA,iBAAS,cAAc,MAAM;AAC5B,gBAAM,KAAK,IAAI,YAAY,cAAc,IAAI,IAAI,EAAE,SAAS,KAAK,CAAC;AAClE,gBAAM,cAAc,EAAE;AAAA,QACvB;AAEA,iBAAS,qBAAqB;AAE7B,cAAI,CAAC,MAAM,QAAQ;AAAiB;AAEpC,gBAAM,WAAW,SAAS,eAAe,MAAM,aAAa,MAAM,CAAC;AACnE,gBAAM,WAAW,SAAS,UAAU;AACpC,mBAAS,KAAK,GAAG,SAAS,EAAE;AAC5B,eAAK,MAAM,aAAa,QAAQ,SAAS,EAAE;AAC3C,sBAAY,UAAU,QAAQ;AAE9B,iBAAO;AAAA,YACN;AAAA,UACD;AAEA,mBAAS,OAAO,QAAQ;AACvB,qBAAS,YAAY;AACrB,kBAAM,KAAK,SAAS,UAAU,EAC5B,OAAO,YAAU,CAAC,OAAO,SAAS,OAAO,KAAK,CAAC,EAC/C,QAAQ,YAAU,SAAS,YAAY,OAAO,UAAU,IAAI,CAAC,CAAC;AAAA,UACjE;AAAA,QACD;AAAA,MACD;AAGA,MAAAF,WAAU,UAAUA,WAAU,YAAYA;AAAA;AAAA;;;ACjW1C,MAAM,YAAY;AAElB,MAAM,MAAM,CAAC;AACb,aAAW,SAAS,SAAS,iBAAiB,YAAY,GAAG;AAC5D,UAAM,KAAK,UAAU,KAAK;AAC1B,UAAM,iBAAiB,UAAU,QAAQ;AACzC,QAAI,KAAK,EAAE;AAAA,EACZ;AAEA,WACE,cAAc,wBAAwB,EACtC,iBAAiB,UAAU,QAAM;AACjC,UAAM,UAAU,GAAG,OAAO;AAC1B,QAAI,QAAQ,QAAM,GAAG,WAAW,CAAC,OAAO;AAAA,EACzC,CAAC;AACF,WACE,cAAc,QAAQ,EACtB,iBAAiB,uBAAuB,UAAU;AAEpD,WAAS,SAAS,EAAE,OAAO,GAAG;AAC7B,UAAM,OAAO,OAAO,cAAc,cAAc,QAAQ;AACxD,SAAK,cAAc,OAAO;AAAA,EAC3B;AAEA,WAAS,WAAW,IAAI;AACvB,YAAQ,IAAI,YAAY,GAAG,SAAS,GAAG,OAAO,KAAK;AAAA,EACpD;",
  "names": ["tagsInput", "separator", "text"]
}
